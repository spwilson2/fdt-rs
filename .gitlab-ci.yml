stages:
  - setup
  - test

setup-rustup:
  stage: setup
  script:
    - rustup toolchain update nightly
    - rustup toolchain update beta
    - rustup toolchain update stable
  cache: 
    key: build-cache
    paths: 
      - /usr/local/cargo/
      - target/

.test-template: &test-template
  stage: test
  image: 'rust:latest'
  cache: 
    key: build-cache
  before_script:
    - rustup default "$RUST_TOOLCHAIN"
    - rustup --version
    - rustc --version
    - cargo --version
  script:
    - cargo test --tests --verbose --jobs 1
    - cargo test --tests --verbose --jobs 1 --release
    - cargo test --features doctest --doc --verbose --jobs 1
    - cargo test --features doctest --doc --verbose --jobs 1 --release
    - cargo test --no-default-features --tests --verbose --jobs 1
    - cargo test --no-default-features --tests --verbose --jobs 1 --release

test-stable:
  <<: *test-template
  variables:
    RUST_TOOLCHAIN:  stable

test-beta:
  <<: *test-template
  variables:
    RUST_TOOLCHAIN:  beta

test-nightly:
  <<: *test-template
  variables:
    RUST_TOOLCHAIN:  nightly

test-coverage:
  <<: *test-template
  variables:
    RUST_TOOLCHAIN: stable
  script:
    - cargo install cargo-tarpaulin -f
    - cargo tarpaulin --verbose

test-fmt:
  <<: *test-template
  variables:
    RUST_TOOLCHAIN: stable
  script:
    - cargo fmt --all --verbose -- --check

test-clippy:
  <<: *test-template
  variables:
    RUST_TOOLCHAIN: stable
  before_script:
    - rustup component add clippy
  script:
    - cargo clippy -- -D warnings
    - cargo clippy --no-default-features -- -D warnings

test-docs:
  <<: *test-template
  variables:
    RUST_TOOLCHAIN: nightly
  script:
    - rustc --version && cargo --version
    - cargo doc --no-deps
